name: Draft & Publish Android Release Tag

on:
  push:
    branches:
      - main
 

permissions:
  contents: write
  id-token: write

jobs:
  release:
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true) ||
      (github.event_name == 'push')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git identity as GitHub Actions bot
        uses: actions-rindeal/git-identity-from-username@v2
        with:
          username: github-actions[bot]
          failover-name: 'github-actions[bot]'
          failover-email: '41898282+github-actions[bot]@users.noreply.github.com'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Identify merged PR for push events
        if: ${{ github.event_name == 'push' }}
        id: get_pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_DATA=$(gh api repos/${{ github.repository }}/commits/${{ github.sha }}/pulls --jq '.[0].head.ref')
          echo "SOURCE_BRANCH=$PR_DATA" >> $GITHUB_ENV

      - name: Determine source branch for pull_request
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "SOURCE_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV

      - name: Check branch pattern
        if: ${{ !startsWith(env.SOURCE_BRANCH, 'releases/And-') }}
        run: |
          echo "Source branch '${SOURCE_BRANCH}' does not start with 'releases/And-'. Exiting."
          exit 0

      - name: Extract version
        run: |
          VERSION=${SOURCE_BRANCH#releases/And-}
          VERSION=${VERSION%%-*}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Compute previous tag
        id: prev
        run: |
          PREV=$(git tag --sort=-creatordate \
            | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' \
            | grep -v "^${VERSION}$" \
            | head -n1 || true)
          echo "PREVIOUS_TAG=$PREV" >> $GITHUB_ENV

      - name: Create tag & push
        run: |
          git tag -a "$VERSION" -m "Release $VERSION"
          git push origin "$VERSION"

      - name: Generate changelog
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fromTag: ${{ env.VERSION }}
          toTag: ${{ env.PREVIOUS_TAG }}
          writeToFile: false
          includeRefIssues: true
          useGitmojis: true
          reverseOrder: false
          includeInvalidCommits: true

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: "${{ env.VERSION }}"
          body: ${{ steps.changelog.outputs.changes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}




