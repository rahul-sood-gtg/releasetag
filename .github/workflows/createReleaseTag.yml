name: Draft & Publish Android Release Tag

on:
  pull_request:
    types: [closed]
    branches:
      - main

permissions:
  contents: write
  id-token: write

jobs:
  release:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'releases/And-')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git identity
        uses: actions-rindeal/git-identity-from-username@v2
        with:
          username: github-actions[bot]
          failover-name: 'github-actions[bot]'
          failover-email: '41898282+github-actions[bot]@users.noreply.github.com'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine source branch
        run: |
          echo "SOURCE_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV

      - name: Check branch pattern
        run: |
          if [[ ! "${SOURCE_BRANCH}" =~ ^releases/And- ]]; then
            echo "Branch does not match release pattern. Exiting."
            exit 0
          fi

      - name: Extract version
        run: |
          VERSION=${SOURCE_BRANCH#releases/And-}
          VERSION=${VERSION%%-*}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Compute previous tag
        id: prev
        run: |
          PREV=$(git tag --sort=-creatordate \
            | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' \
            | grep -v "^${VERSION}$" \
            | head -n1 || true)
          echo "PREVIOUS_TAG=$PREV" >> $GITHUB_ENV

      - name: Create tag & push
        run: |
          git tag -a "$VERSION" -m "Release $VERSION"
          git push origin "$VERSION"

      - name: Generate PR-style changelog with emojis
        id: changelog
        run: |
          if [ -z "$PREVIOUS_TAG" ]; then
            RANGE="--reverse"
          else
            RANGE="$PREVIOUS_TAG..$VERSION --reverse"
          fi

          LOG=$(git log $RANGE --pretty=format:"- %h - %s (%an)" | \
            sed -E 's/\[([A-Z]+-[0-9]+)\]/âœ¨ [\1]/g' | \
            sed -E 's/#([0-9]+)/ðŸ”– #\1/g')

          echo "CHANGELOG=## âœ¨ What Changed\n$LOG" >> $GITHUB_ENV

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: "${{ env.VERSION }}"
          body: |
            ${{ env.CHANGELOG }}

            **[Full Changelog](https://github.com/${{ github.repository }}/compare/${{ env.PREVIOUS_TAG }}...${{ env.VERSION }})**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
