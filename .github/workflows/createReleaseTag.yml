name: Draft & Publish Android Release Tag

on:
  pull_request:
    types: [closed]
    branches:
      - main

permissions:
  contents: write
  id-token: write

jobs:
  release:
    if: >
      github.event.pull_request.merged == true &&
      startsWith(github.event.pull_request.head.ref, 'releases/And-')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Provide Git identity
        run: |
          git config --global user.email "rahul.sood@gumtreegroup.com.au"
          git config --global user.name "Rahul Sood"

      - name: Extract version from branch
        run: |
          REF=${{ github.event.pull_request.head.ref }}
          VERSION=${REF#releases/And-}
          VERSION=${VERSION%%-*}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Fetch all tags
        run: git fetch --tags

      - name: Compute previous release tag
        id: prev
        run: |
          PREV=$(git tag --sort=-creatordate \
            | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' \
            | grep -v "^${VERSION}$" \
            | head -n1 || true)
          echo "PREVIOUS_TAG=$PREV" >> $GITHUB_ENV
          echo "previous_tag=$PREV" >> $GITHUB_OUTPUT

      - name: Create annotated tag & push version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$VERSION" -m "Release $VERSION"
          git push origin "$VERSION"

      - name: Generate changelog via Conventional Commits
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fromTag: ${{ env.VERSION }}       # NEW tag
          toTag:   ${{ env.PREVIOUS_TAG }}  # OLD tag
          writeToFile: false
          changelogFilePath: CHANGELOG.md
          includeRefIssues: true
          useGitmojis: true
          reverseOrder: false
          includeInvalidCommits: true    
          excludeTypes: ""

      - name: Create GitHub release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8
        with:
          tag_name: ${{ env.VERSION }}
          name: "Release ${{ env.VERSION }}"
          body: ${{ steps.changelog.outputs.changes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

